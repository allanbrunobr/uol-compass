spring:
  application:
    name: sangiorgio-challenge

  sql:
    init:
      mode: always
      platform: h2

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: password

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2-console

aws:
  access-key: YOUR_AWS_ACCESS_KEY
  secret-key: YOUR_AWS_SECRET_KEY
  region: us-east-1

sqs:
  queue:
    url-parcial: https://sqs.us-east-1.amazonaws.com/480434688416/url-parcial
    url-total: https://sqs.us-east-1.amazonaws.com/480434688416/url-total
    url-excedente: https://sqs.us-east-1.amazonaws.com/480434688416/url-excedente

rabbitmq:
  host: ${RABBITMQ_HOST:localhost}
  port: ${RABBITMQ_PORT:5672}
  username: ${RABBITMQ_USERNAME:guest}
  password: ${RABBITMQ_PASSWORD:guest}
  exchange:
    name: pagamentos.exchange
  routing-key:
    parcial: pagamento.parcial
    total: pagamento.total
    excedente: pagamento.excedente
  queue:
    parcial: fila-pagamentos-parciais
    total: fila-pagamentos-totais
    excedente: fila-pagamentos-excedentes

message:
  service: SQS  # Pode ser RABBITMQ, SQS, KAFKA, PUBSUB

server:
  port: 8080

logging:
  level:
    root: INFO
    com.br.uol.compass.sangiorgiochallenge: DEBUG
    org.springframework.web: INFO
    org.hibernate: INFO

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
